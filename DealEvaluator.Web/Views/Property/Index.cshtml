@model List<DealEvaluator.Application.DTOs.Property.PropertyDto>

@{
    ViewData["Title"] = "My Properties";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="display-5 fw-bold">My Properties</h1>
            <p class="text-muted">Manage and track your real estate investments</p>
        </div>
        <div class="col-md-4 text-md-end">
            <a asp-controller="Property" asp-action="Create" class="btn btn-primary btn-lg">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-plus-circle me-2" viewBox="0 0 16 16" style="vertical-align: text-bottom;">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
                </svg>
                Add New Property
            </a>
        </div>
    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="card border-0 shadow-sm text-center py-5">
                    <div class="card-body">
                        <svg xmlns="http://www.w3.org/2000/svg" width="80" height="80" fill="currentColor" class="bi bi-house-slash text-muted mb-3" viewBox="0 0 16 16">
                            <path d="M6.5 14.5v-3.505c0-.245.25-.495.5-.495h2c.25 0 .5.25.5.5v3.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5"/>
                        </svg>
                        <h3 class="mb-3">No Properties Yet</h3>
                        <p class="text-muted mb-4">Get started by adding your first investment property to evaluate.</p>
                        <a asp-controller="Property" asp-action="Create" class="btn btn-primary btn-lg">
                            Add Your First Property
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var property in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100 border-0 shadow-sm property-card">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-3">
                                <h5 class="card-title mb-0 fw-bold">@property.Address</h5>
                                <span class="badge bg-primary">@property.PropertyType</span>
                            </div>

                            <p class="text-muted mb-3">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-geo-alt me-1" viewBox="0 0 16 16">
                                    <path d="M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A32 32 0 0 1 8 14.58a32 32 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10"/>
                                    <path d="M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4m0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6"/>
                                </svg>
                                @property.City, @property.State @property.ZipCode
                            </p>

                            <div class="row g-2 mb-3">
                                @if (property.Price.HasValue)
                                {
                                    <div class="col-6">
                                        <div class="small text-muted">Price</div>
                                        <div class="fw-semibold">$@property.Price.Value.ToString("N0")</div>
                                    </div>
                                }
                                @if (property.Sqft.HasValue)
                                {
                                    <div class="col-6">
                                        <div class="small text-muted">Sq Ft</div>
                                        <div class="fw-semibold">@property.Sqft.Value.ToString("N0")</div>
                                    </div>
                                }
                                @if (property.Bedrooms.HasValue)
                                {
                                    <div class="col-6">
                                        <div class="small text-muted">Bedrooms</div>
                                        <div class="fw-semibold">@property.Bedrooms</div>
                                    </div>
                                }
                                @if (property.Bathrooms.HasValue)
                                {
                                    <div class="col-6">
                                        <div class="small text-muted">Bathrooms</div>
                                        <div class="fw-semibold">@property.Bathrooms</div>
                                    </div>
                                }
                            </div>

                            <div class="d-flex gap-2 mt-auto">
                                <a asp-controller="Property" asp-action="Details" asp-route-id="@property.Id" class="btn btn-sm btn-outline-primary flex-fill">
                                    View Details
                                </a>
                                <form asp-controller="Property" asp-action="Delete" asp-route-id="@property.Id" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this property?');">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-sm btn-outline-danger">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
                                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
                                        </svg>
                                    </button>
                                </form>
                            </div>
                        </div>
                        <div class="card-footer bg-light border-0">
                            <small class="text-muted">
                                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-clock me-1" viewBox="0 0 16 16">
                                    <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71z"/>
                                    <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0"/>
                                </svg>
                                Added @property.CreatedAt.ToString("MMM d, yyyy")
                            </small>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Styles {
    <style>
        .property-card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .property-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        }
    </style>
}